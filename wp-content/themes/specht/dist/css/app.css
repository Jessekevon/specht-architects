@charset "UTF-8";
html {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-tap-highlight-color: transparent;
}

body {
  margin: 0;
}

iframe {
  border: 0;
}

h1,
h2,
h3,
h4,
h5,
p,
ol,
blockquote,
figure,
button {
  margin: 0;
  padding: 0;
}

main,
li {
  display: block;
}

h1,
h2,
h3,
h4,
h5,
p {
  font-size: inherit;
}

strong {
  font-weight: bold;
}

sup {
  position: relative;
  top: -.5em;
  font-size: 65%;
  line-height: 0;
  vertical-align: baseline;
}

a,
button {
  color: inherit;
}

a {
  text-decoration: none;
}

button {
  overflow: visible;
  border: 0;
  font: inherit;
  letter-spacing: inherit;
  background: none;
  cursor: pointer;
  -webkit-font-smoothing: inherit;
}

button:focus {
  outline: 0;
}

::-moz-focus-inner {
  padding: 0;
  border: 0;
}

img {
  max-width: 100%;
  height: auto;
  border: 0;
}

*:focus {
  outline: none;
}

/* Fonts
–––––––––––––––––––––––––––––––––––––––––––––––––– */
h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: 1rem;
}

h1 {
  font-size: 5.0rem;
  line-height: 1.2;
  letter-spacing: .1rem;
}

h2 {
  font-size: 4.0rem;
  line-height: 1.25;
  letter-spacing: .1rem;
}

h3 {
  font-size: 3.2rem;
  line-height: 1.3;
  letter-spacing: .1rem;
}

h4 {
  font-size: 2.0rem;
  line-height: 1.35;
  letter-spacing: -.08rem;
}

h5 {
  font-size: 1.8rem;
  line-height: 2;
  letter-spacing: -.05rem;
}

h6 {
  font-size: 1.6rem;
  line-height: 1.6;
  letter-spacing: 0;
}

@media (min-width: 768px) {
  h1 {
    font-size: 8.0rem;
  }
  h2 {
    font-size: 6.0rem;
  }
  h3 {
    font-size: 4.0rem;
  }
  h4 {
    font-size: 3.0rem;
  }
  h5 {
    font-size: 2.2rem;
  }
  h6 {
    font-size: 1.6rem;
  }
}

p {
  margin-top: 0;
  letter-spacing: .5rem;
  font-size: 1.2rem;
  text-transform: uppercase;
  transition: .3s ease-in-out;
  -moz-transition: .3s ease-in-out;
  -webkit-transition: .3s ease-in-out;
}

@media (min-width: 768px) {
  p {
    font-size: 1.3rem;
  }
}

a {
  font-size: 1.3rem;
  text-decoration: none;
  color: #1a1a1a;
  transition: .3s ease-in-out;
  -moz-transition: .3s ease-in-out;
  -webkit-transition: .3s ease-in-out;
}

a:hover {
  transition: .3s ease-in-out;
  -moz-transition: .3s ease-in-out;
  -webkit-transition: .3s ease-in-out;
}

.button {
  margin-top: 20px;
  display: inline-block;
  width: 156px;
  padding: 0;
  height: 59px;
  line-height: 59px;
  color: #555555;
  text-align: center;
  font-size: 1.2rem;
  letter-spacing: .4rem;
  text-transform: uppercase;
  text-decoration: none;
  white-space: nowrap;
  background-color: transparent;
  border: 1px solid #000;
  cursor: pointer;
  box-sizing: border-box;
  transition: .3s ease-in-out;
  -moz-transition: .3s ease-in-out;
  -webkit-transition: .3s ease-in-out;
}

input[type="submit"],
input[type="reset"],
input[type="button"] {
  display: inline-block;
  height: 38px;
  padding: 0 30px;
  color: #555555;
  text-align: center;
  font-size: 11px;
  font-weight: 600;
  line-height: 38px;
  letter-spacing: .1rem;
  text-transform: uppercase;
  text-decoration: none;
  white-space: nowrap;
  background-color: transparent;
  border: 1px solid #000;
  cursor: pointer;
  box-sizing: border-box;
}

.button:hover {
  background: #1a1a1a;
  color: #ffffff;
  border-color: #1a1a1a;
  outline: 0;
  transition: .3s ease-in-out;
  -moz-transition: .3s ease-in-out;
  -webkit-transition: .3s ease-in-out;
}

.button:hover p {
  color: #ffffff;
  transition: .3s ease-in-out;
  -moz-transition: .3s ease-in-out;
  -webkit-transition: .3s ease-in-out;
}

input[type="submit"]:hover,
input[type="reset"]:hover,
input[type="button"]:hover {
  color: #333;
  border-color: #888888;
  outline: 0;
}

.button:focus {
  color: #333;
  border-color: #888888;
  outline: 0;
}

input[type="submit"]:focus,
input[type="reset"]:focus,
input[type="button"]:focus {
  color: #333;
  border-color: #888888;
  outline: 0;
}

.button.button-primary {
  color: #fff;
  background-color: #33c3f0;
  border-color: #33c3f0;
}

input[type="submit"].button-primary,
input[type="reset"].button-primary,
input[type="button"].button-primary {
  color: #fff;
  background-color: #33c3f0;
  border-color: #33c3f0;
}

.button.button-primary:hover {
  color: #fff;
  background-color: #1eaedb;
  border-color: #1eaedb;
}

input[type="submit"].button-primary:hover,
input[type="reset"].button-primary:hover,
input[type="button"].button-primary:hover {
  color: #fff;
  background-color: #1eaedb;
  border-color: #1eaedb;
}

.button.button-primary:focus {
  color: #fff;
  background-color: #1eaedb;
  border-color: #1eaedb;
}

input[type="submit"].button-primary:focus,
input[type="reset"].button-primary:focus,
input[type="button"].button-primary:focus {
  color: #fff;
  background-color: #1eaedb;
  border-color: #1eaedb;
}

input[type="email"],
input[type="number"],
input[type="search"],
input[type="text"],
input[type="tel"],
input[type="url"],
input[type="password"] {
  height: 38px;
  padding: 6px 10px;
  background-color: #fff;
  box-shadow: none;
  box-sizing: border-box;
}

.wrap {
  max-width: 960px;
  margin-left: auto;
  margin-right: auto;
}

.wrap:after {
  content: " ";
  display: block;
  clear: both;
}

.col2,
.col3,
.col4 {
  width: 97.2222222222%;
  float: left;
  margin-left: 1.3888888889%;
  margin-right: 1.3888888889%;
}

@media (min-width: 768px) {
  .col2 {
    width: 47.2222222222%;
    float: left;
    margin-left: 1.3888888889%;
    margin-right: 1.3888888889%;
  }
  .col3 {
    width: 47.2222222222%;
    float: left;
    margin-left: 1.3888888889%;
    margin-right: 1.3888888889%;
  }
  .col4 {
    width: 47.2222222222%;
    float: left;
    margin-left: 1.3888888889%;
    margin-right: 1.3888888889%;
  }
  .wrap {
    max-width: 750px;
    margin-left: auto;
    margin-right: auto;
  }
  .wrap:after {
    content: " ";
    display: block;
    clear: both;
  }
}

@media (min-width: 992px) {
  .wrap {
    max-width: 970px;
    margin-left: auto;
    margin-right: auto;
  }
  .wrap:after {
    content: " ";
    display: block;
    clear: both;
  }
  .col4 {
    width: 22.2222222222%;
    float: left;
    margin-left: 1.3888888889%;
    margin-right: 1.3888888889%;
  }
}

@media (min-width: 1025px) {
  .col3 {
    width: 30.5555555556%;
    float: left;
    margin-left: 1.3888888889%;
    margin-right: 1.3888888889%;
  }
}

@media (min-width: 1200px) {
  .wrap {
    max-width: 1170px;
    margin-left: auto;
    margin-right: auto;
  }
  .wrap:after {
    content: " ";
    display: block;
    clear: both;
  }
}

.tabs-wrap {
  max-width: 750px;
  margin-left: auto;
  margin-right: auto;
}

.tabs-wrap:after {
  content: " ";
  display: block;
  clear: both;
}

@media (min-width: 768px) {
  .header-main {
    height: 130px;
    display: block;
    margin-bottom: 75px;
  }
  ul.nav-menu {
    float: right;
    margin-right: 45px;
    margin-top: 66px;
  }
  ul.nav-menu li {
    display: inline-block;
    margin: 0 15px;
  }
  ul.nav-menu li a {
    color: #ff664b;
    font-size: 1.6rem;
    font-weight: 400;
  }
  ul.nav-menu li a:hover {
    color: #999999;
  }
  ul.nav-menu li.current_page_item a {
    color: #999999;
  }
  svg {
    float: left;
    width: 211px;
    height: auto;
    margin-left: 45px;
    margin-top: 66px;
  }
  svg path {
    fill: #ff664b;
    transition: .3s ease-in-out;
    -moz-transition: .3s ease-in-out;
    -webkit-transition: .3s ease-in-out;
  }
  svg:hover path {
    fill: #999999;
    transition: .3s ease-in-out;
    -moz-transition: .3s ease-in-out;
    -webkit-transition: .3s ease-in-out;
  }
  .home .header-main {
    height: auto;
    display: inline;
    margin-bottom: 0;
  }
  .home ul.nav-menu {
    position: absolute;
    top: 66px;
    right: 45px;
    z-index: 9999;
    margin: 0 auto;
  }
  .home ul.nav-menu li a {
    color: #ffffff;
  }
  .home ul.nav-menu li a:hover {
    color: #ff664b;
  }
  .home svg {
    position: absolute;
    z-index: 9999;
    top: 66px;
    left: 45px;
    margin: 0 auto;
  }
  .home svg path {
    fill: #ffffff;
  }
  .home svg:hover path {
    fill: #ff664b;
  }
}

@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Firefox < 16 */

/* Safari, Chrome and Opera > 12.1 */
@-webkit-keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Internet Explorer */

/* Opera < 12.1 */

/* Before Page is loaded hide image
---------------------------------------------------- */
.fadeIn {
  opacity: 0;
}

/* Once the page is fully loaded let's add this class and add an opacity change to fade in smoothly
---------------------------------------------------- */
.fadeIn-1s {
  opacity: 1;
  /* Firefox 4 */
  -webkit-transition: opacity 1s;
  /* Safari and Chrome */
  transition: opacity 1s;
}

.tabs-nav {
  position: relative;
  display: inline-block;
  padding: 20px 0 10px 0;
  width: 100%;
  border-bottom: 1px solid #ccc;
  -webkit-transition: all 0.2s ease;
          transition: all 0.2s ease;
  margin: 0;
  margin-bottom: 20px;
}

.tabs-nav li {
  display: inline-block;
  line-height: 40px;
  cursor: pointer;
  padding: 0 12px;
  color: #ff664b;
  position: relative;
}

.tabs-nav #magic-line {
  position: absolute;
  height: 5px;
  bottom: -3px;
  left: 0;
  padding: 0;
  margin: 0;
  -webkit-transition: all 0.8s ease;
          transition: all 0.8s ease;
}

.tabs-nav #magic-line::before {
  content: "";
  width: -webkit-calc(100% + 20px);
  width: calc(100% + 20px);
  height: 5px;
  background: #ff664b;
  left: 0;
  position: absolute;
}

.tabs-nav a {
  height: 40px;
  display: inline-block;
  color: #ff664b;
}

.tabs-nav a:hover {
  color: #999999;
}

.site-footer {
  background: #e6e6e6;
  padding: 8px 0 4px 0;
  text-align: center;
  float: left;
  width: 100%;
}

@media (min-width: 992px) {
  .site-footer {
    text-align: left;
  }
}

.site-footer p {
  font-size: 1.0rem;
  letter-spacing: 0.1rem;
  text-transform: inherit;
  margin-bottom: 0;
  margin: 0 15px;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 5;
  background: rgba(255, 255, 255, 0.9);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  pointer-events: none;
  opacity: 0;
  -webkit-transition: opacity 0.5s;
          transition: opacity 0.5s;
}

.overlay.active {
  opacity: 1;
  pointer-events: auto;
}

.overlay img.close {
  cursor: pointer;
  position: absolute;
  display: block;
  height: 45px;
  width: 47px;
  top: 5px;
  right: 5%;
  opacity: 0;
  pointer-events: none;
  -webkit-transform: translateY(0) translate3d(0, 0, 0) translateZ(0);
          transform: translateY(0) translate3d(0, 0, 0) translateZ(0);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;
          transition: opacity 0.3s, transform 0.3s;
  pointer-events: auto;
  -webkit-transform: translateY(60px);
      -ms-transform: translateY(60px);
          transform: translateY(60px);
  opacity: 1;
  z-index: 999;
}

.overlay img.close:hover {
  opacity: 0.5;
}

/* Slider */
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent;
  width: auto;
  height: 100%;
  text-align: center;
}

@media (min-width: 768px) {
  .slick-slider {
    margin: 0 auto;
  }
}

.slick-slider img {
  max-width: 100%;
  height: auto;
}

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0;
  width: 100%;
}

.slick-list:focus {
  outline: none;
}

.slick-list.dragging {
  cursor: pointer;
  cursor: hand;
}

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
}

.slick-track:before,
.slick-track:after {
  content: "";
  display: table;
}

.slick-track:after {
  clear: both;
}

.slick-loading .slick-track {
  visibility: hidden;
}

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none;
}

[dir="rtl"] .slick-slide {
  float: right;
}

.slick-slide img {
  display: block;
}

.slick-slide.slick-loading img {
  display: none;
}

.slick-slide.dragging img {
  pointer-events: none;
}

.slick-initialized .slick-slide {
  display: block;
}

.slick-loading .slick-slide {
  visibility: hidden;
}

.slick-vertical .slick-slide {
  display: block;
  height: auto;
  border: 1px solid transparent;
}

/* Arrows */
.landing-background-image {
  height: 75vh;
}

.arrows, .description, .next-project {
  width: 30.5555555556%;
  float: left;
  margin-left: 1.3888888889%;
  margin-right: 1.3888888889%;
}

.about-header {
  height: 60vh;
  width: 100%;
  background-position: 20%;
  color: #ffffff;
  display: inline-block;
}

.about-header .about-header-content {
  text-align: center;
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.about-header p {
  color: #ffffff;
  font-size: 1.2;
}

@media (min-width: 992px) {
  .about-intro h5 {
    text-align: left;
  }
}

@media (min-width: 992px) {
  .recent-projects .image-block-content {
    height: 70px;
  }
}

.recent-projects h3 {
  font-size: 2.2rem;
}

.recent-projects .image-block-background-image {
  height: 238px;
}

html, body {
  height: 100%;
  width: 100%;
}

html {
  font-size: 62.5%;
}

body {
  font-size: 1.5em;
  line-height: 1.6;
  font-weight: 300;
  font-family: "canada-type-gibson", sans-serif;
  background-color: #ffffff;
}

li {
  list-style: none;
}

.text-center {
  text-align: center;
}

/*# sourceMappingURL=data:application/json;base64, */